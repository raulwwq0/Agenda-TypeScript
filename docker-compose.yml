version: '3.7'

services:
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - type: bind
        source: ./mongo-init.js
        target: /docker-entrypoint-initdb.d/mongo-init.js
      - type: bind
        source: ./docker/mongo/data
        target: /data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: toor
      MONGO_INITDB_DATABASE: agenda

  sonarqube:
    image: sonarqube:lts-community
    depends_on:
      - postgres
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - type: bind
        source: ./docker/sonarqube/data
        target: /opt/sonarqube/data
      - type: bind
        source: ./docker/sonarqube/extensions
        target: /opt/sonarqube/extensions
      - type: bind
        source: ./docker/sonarqube/logs
        target: /opt/sonarqube/logs
    ports:
      - "9000:9000"

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - type: bind
        source: ./docker/postgresql/conf
        target: /var/lib/postgresql
      - type: bind
        source: ./docker/postgresql/data
        target: /var/lib/postgresql/data

  init-config:
    image: bash
    privileged: true
    user: root
    volumes:
      - ./init.sh:/mnt/init.sh
    command: [ "sh", "-e", "/mnt/init.sh" ]
